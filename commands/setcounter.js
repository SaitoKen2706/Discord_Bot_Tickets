const { ActionRowBuilder, StringSelectMenuBuilder } = require('discord.js');
const storage = require('../storage');
const { hasAdminPermission } = require('../utils/permissions');

module.exports = {
    name: 'setcounter',
    async execute(message, args) {
        if (!hasAdminPermission(message.member)) {
            return message.reply({ 
                embeds: [{
                    color: 0xFF0000,
                    title: 'L·ªói Quy·ªÅn H·∫°n',
                    description: 'B·∫°n kh√¥ng c√≥ quy·ªÅn s·ª≠ d·ª•ng l·ªánh n√†y.',
                    timestamp: new Date()
                }],
                flags: 64 
            });
        }

        const stats = storage.getStats();

        const row = new ActionRowBuilder()
            .addComponents(
                new StringSelectMenuBuilder()
                    .setCustomId('counter_select')
                    .setPlaceholder('Ch·ªçn lo·∫°i s·ªë li·ªáu c·∫ßn ƒëi·ªÅu ch·ªânh')
                    .addOptions([
                        {
                            label: 'T·ªïng s·ªë',
                            description: `Gi√° tr·ªã hi·ªán t·∫°i: ${stats.total}`,
                            value: 'total',
                            emoji: 'üìä'
                        },
                        {
                            label: 'ƒêang x·ª≠ l√Ω',
                            description: `Gi√° tr·ªã hi·ªán t·∫°i: ${stats.processing}`,
                            value: 'processing',
                            emoji: '‚è≥'
                        },
                        {
                            label: 'ƒê√£ ho√†n th√†nh',
                            description: `Gi√° tr·ªã hi·ªán t·∫°i: ${stats.completed}`,
                            value: 'completed',
                            emoji: '‚úÖ'
                        }
                    ])
            );

        await message.reply({
            embeds: [{
                color: 0x2f3136,
                title: '// ƒêi·ªÅu Ch·ªânh Th·ªëng K√™',
                description: 'Ch·ªçn lo·∫°i s·ªë li·ªáu b·∫°n mu·ªën ƒëi·ªÅu ch·ªânh:',
                timestamp: new Date()
            }],
            components: [row],
            flags: 64
        });
    }
};